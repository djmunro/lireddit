{"ast":null,"code":"var _jsxFileName = \"/Users/david/ABC/P/Projects/react-clone/web/src/pages/login.tsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { Formik, Form } from \"formik\";\nimport { Box, Button } from \"@chakra-ui/core\";\nimport { Wrapper } from \"../components/Wrapper\";\nimport { InputField } from \"../components/InputField\";\nimport { useLoginMutation } from \"../generated/graphql\";\nimport { toErrorMap } from \"../utils/toErrorMap\";\nimport { useRouter } from \"next/router\";\nexport const Login = ({}) => {\n  const router = useRouter();\n  const [, login] = useLoginMutation();\n  return __jsx(Wrapper, {\n    variant: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, __jsx(Formik, {\n    initialValues: {\n      username: \"\",\n      password: \"\"\n    },\n    onSubmit: async (values, {\n      setErrors\n    }) => {\n      var _response$data, _response$data2;\n\n      const response = await login(values);\n      console.log({\n        response\n      });\n\n      if ((_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.login.errors) {\n        setErrors(toErrorMap(response.data.login.errors));\n      } else if ((_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : _response$data2.login.user) {\n        // worked\n        router.push(\"/\");\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }, ({\n    isSubmitting\n  }) => __jsx(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }\n  }, __jsx(InputField, {\n    name: \"username\",\n    placeholder: \"username\",\n    label: \"Username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }), __jsx(Box, {\n    mt: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, __jsx(InputField, {\n    name: \"password\",\n    placeholder: \"password\",\n    label: \"Password\",\n    type: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 15\n    }\n  })), __jsx(Button, {\n    mt: 4,\n    isLoading: isSubmitting,\n    type: \"submit\",\n    variantColor: \"teal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, \"Login\"))));\n};\nexport default Login;","map":{"version":3,"sources":["/Users/david/ABC/P/Projects/react-clone/web/src/pages/login.tsx"],"names":["React","Formik","Form","Box","Button","Wrapper","InputField","useLoginMutation","toErrorMap","useRouter","Login","router","login","username","password","values","setErrors","response","console","log","data","errors","user","push","isSubmitting"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,QAA7B;AACA,SAASC,GAAT,EAAcC,MAAd,QAA4B,iBAA5B;AACA,SAASC,OAAT,QAAwB,uBAAxB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,gBAAT,QAAiC,sBAAjC;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,OAAO,MAAMC,KAAmB,GAAG,CAAC,EAAD,KAAQ;AACzC,QAAMC,MAAM,GAAGF,SAAS,EAAxB;AACA,QAAM,GAAGG,KAAH,IAAYL,gBAAgB,EAAlC;AACA,SACE,MAAC,OAAD;AAAS,IAAA,OAAO,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AACE,IAAA,aAAa,EAAE;AAAEM,MAAAA,QAAQ,EAAE,EAAZ;AAAgBC,MAAAA,QAAQ,EAAE;AAA1B,KADjB;AAEE,IAAA,QAAQ,EAAE,OAAOC,MAAP,EAAe;AAAEC,MAAAA;AAAF,KAAf,KAAiC;AAAA;;AACzC,YAAMC,QAAQ,GAAG,MAAML,KAAK,CAACG,MAAD,CAA5B;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAY;AAAEF,QAAAA;AAAF,OAAZ;;AACA,4BAAIA,QAAQ,CAACG,IAAb,mDAAI,eAAeR,KAAf,CAAqBS,MAAzB,EAAiC;AAC/BL,QAAAA,SAAS,CAACR,UAAU,CAACS,QAAQ,CAACG,IAAT,CAAcR,KAAd,CAAoBS,MAArB,CAAX,CAAT;AACD,OAFD,MAEO,uBAAIJ,QAAQ,CAACG,IAAb,oDAAI,gBAAeR,KAAf,CAAqBU,IAAzB,EAA+B;AACpC;AACAX,QAAAA,MAAM,CAACY,IAAP,CAAY,GAAZ;AACD;AACF,KAXH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAaG,CAAC;AAAEC,IAAAA;AAAF,GAAD,KACC,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,WAAW,EAAC,UAFd;AAGE,IAAA,KAAK,EAAC,UAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAME,MAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,WAAW,EAAC,UAFd;AAGE,IAAA,KAAK,EAAC,UAHR;AAIE,IAAA,IAAI,EAAC,UAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CANF,EAcE,MAAC,MAAD;AACE,IAAA,EAAE,EAAE,CADN;AAEE,IAAA,SAAS,EAAEA,YAFb;AAGE,IAAA,IAAI,EAAC,QAHP;AAIE,IAAA,YAAY,EAAC,MAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAdF,CAdJ,CADF,CADF;AA2CD,CA9CM;AAgDP,eAAed,KAAf","sourcesContent":["import React from \"react\";\nimport { Formik, Form } from \"formik\";\nimport { Box, Button } from \"@chakra-ui/core\";\nimport { Wrapper } from \"../components/Wrapper\";\nimport { InputField } from \"../components/InputField\";\nimport { useLoginMutation } from \"../generated/graphql\";\nimport { toErrorMap } from \"../utils/toErrorMap\";\nimport { useRouter } from \"next/router\";\n\nexport const Login: React.FC<{}> = ({}) => {\n  const router = useRouter();\n  const [, login] = useLoginMutation();\n  return (\n    <Wrapper variant=\"small\">\n      <Formik\n        initialValues={{ username: \"\", password: \"\" }}\n        onSubmit={async (values, { setErrors }) => {\n          const response = await login(values);\n          console.log({ response });\n          if (response.data?.login.errors) {\n            setErrors(toErrorMap(response.data.login.errors));\n          } else if (response.data?.login.user) {\n            // worked\n            router.push(\"/\");\n          }\n        }}\n      >\n        {({ isSubmitting }) => (\n          <Form>\n            <InputField\n              name=\"username\"\n              placeholder=\"username\"\n              label=\"Username\"\n            />\n            <Box mt={4}>\n              <InputField\n                name=\"password\"\n                placeholder=\"password\"\n                label=\"Password\"\n                type=\"password\"\n              />\n            </Box>\n            <Button\n              mt={4}\n              isLoading={isSubmitting}\n              type=\"submit\"\n              variantColor=\"teal\"\n            >\n              Login\n            </Button>\n          </Form>\n        )}\n      </Formik>\n    </Wrapper>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}